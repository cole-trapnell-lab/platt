% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{layout_state_graph}
\alias{layout_state_graph}
\title{Layout State Graph}
\usage{
layout_state_graph(
  G,
  node_metadata,
  edge_labels = NULL,
  num_layers = 1,
  weighted = FALSE
)
}
\arguments{
\item{G}{An igraph object representing the directed graph.}

\item{node_metadata}{A data frame containing node metadata. Must include columns 'group_nodes_by' and 'id'.}

\item{edge_labels}{A named vector of edge labels (optional).}

\item{num_layers}{An integer specifying the number of layers for node assignment (default is 1).}

\item{weighted}{A logical value indicating whether the graph is weighted (default is FALSE).}
}
\value{
A list containing:
\item{gvizl_coords}{A matrix of layout coordinates for the nodes.}
\item{bezier_df}{A data frame of Bezier curve control points for edges.}
\item{label_df}{A data frame of edge labels (if provided).}
\item{grouping_df}{A data frame of node groupings based on metadata.}
\item{hidden_gvizl_coords}{A matrix of layout coordinates for hidden nodes.}
\item{hidden_bezier_df}{A data frame of Bezier curve control points for edges involving hidden nodes.}
\item{hidden_label_df}{A data frame of edge labels for edges involving hidden nodes (if provided).}
}
\description{
This function layouts a directed graph with optional node metadata and edge labels.
It ensures the graph is directed, connects isolated nodes, assigns nodes to layers,
and adds hidden head and tail nodes to each component. The function then performs
layout using Rgraphviz and extracts Bezier curve control points for edges.
}
\examples{
# Example usage:
G <- igraph::make_ring(10, directed = TRUE)
node_metadata <- data.frame(id = 1:10, group_nodes_by = rep(1:2, each = 5))
result <- layout_state_graph(G, node_metadata)

}
